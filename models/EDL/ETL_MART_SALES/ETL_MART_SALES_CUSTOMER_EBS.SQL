/*---------------------------------------------------------------------------
Command to run model:
--dbt build --select ETL_MART_SALES_CUSTOMER_EBS

Version     Date            Author               Description
-------     --------        -----------          ----------------------------------
1.0         01/23/2023      Vinay Subramanian    Initial Version
2.0         02/16/2023      Vinay Subramanian    Added BIll and Ship address columns
---------------------------------------------------------------------------*/
{################# EDW Job Template Variables #################}
{%-set v_pk_list = ['CUSTOMER_CODE']-%}
{% if is_incremental() %}
{%-set v_house_keeping_column = ['BIW_INS_DTTM','BIW_UPD_DTTM','BIW_BATCH_ID','BIW_MD5_KEY']-%}
{%-set v_all_column_list =  edw_get_column_list( this ) -%}
{%-set v_update_column_list =  edw_get_quoted_column_list( this ,v_pk_list|list + ['BIW_INS_DTTM']|list) -%}
{%-set v_md5_column_list =  edw_get_md5_column_list( this ,v_pk_list|list+ v_house_keeping_column|list ) -%}
--DBT Variable
--SELECT {{v_all_column_list}}
--SELECT {{v_update_column_list}}
--SELECT {{v_md5_column_list}}
{% endif %}

{################# Batch control insert and update SQL #################}
{%- set v_dbt_job_name = 'DBT_ETL_MART_SALES_CUSTOMER_EBS'-%}
-- Step 1 Batch process info
{%- set v_watermark = edw_batch_control(v_dbt_job_name,config.get('schema'),config.get('alias') ,config.get('tags'),config.get('materialized') ) -%}
{%- set V_LWM = v_watermark[0] -%}
{%- set V_HWM = v_watermark[1] -%}
{%- set V_START_DTTM = v_watermark[2] -%}
{%- set V_BIW_BATCH_ID = v_watermark[3] -%}
{%- set v_sql_upd_success_batch = "CALL UTILITY.EDW_BATCH_SUCCESS_PROC('"~v_dbt_job_name~"')" -%}


{{
    config(
         description = 'Building etl table CUSTOMER for sales mart '
        ,transient=true
        ,materialized='table'
        ,schema ='ETL_MART_SALES'
        ,alias='CUSTOMER_EBS'
        ,tags ='MART_SALES'
        ,post_hook= [v_sql_upd_success_batch]
        )
}}

WITH 
STG_XXON_CUST AS (
    SELECT 
    CUST_CODE AS CUSTOMER_CODE,
    CUST_SITE_USE_ID AS ERP_SITE_USE_ID,
    SITE_STATUS_CODE AS ERP_STATUS,
    PARTY_SITE_NAME AS CUSTOMER_NAME,
    CUSTOMER_TYPE AS CUSTOMER_TYPE_CODE,
    CORP_CATEGORY_CODE AS CORPORATION_CATEGORY_CODE ,
    CATEGORY_DESC AS CORPORATION_CATEGORY_DESCRIPTION ,
    CUSTOMER_CLASS_CODE AS BUSINESS_CLASS_CODE,
    CORP_CODE AS CORPORATION_CODE,
    CUSTOMER_SUB_CORP_CODE AS END_CORPORATION_CODE,
    CURRENCY_CODE AS CURRENCY_CODE,
    ISO_CURRENCY_CODE AS ISO_CURRENCY_CODE,
    CREDIT_HOLD AS HAS_CREDIT_HOLD,
    SERVICE_HOLD_FLAG AS HAS_SERVICE_HOLD,
    APPROVAL_FLAG AS HAS_APPROVAL,
    ORDER_PROCESSING_REGION_CODE AS ORDER_PROCESSING_REGION_CODE,
    SHIP_EARLY_DAYS AS CRD_SHIP_EARLY_DAYS_QUANTITY,
    CRD_PARTIAL_SHIPMENT_FLAG AS HAS_CRD_PARTIAL,
    SHIP_VIA_CODE AS SHIP_VIA_CODE,
    SHIP_TO_CRD_FLG AS HAS_SHIP_TO_CRD,
    SHIP_LATE_DAYS AS SHIP_LATE_DAYS_QUANTITY,
    BILL_CUST_CODE AS BILL_CUSTOMER_CODE,
    HANDLING_CODE AS HANDLING_METHOD_CODE,
    EDI_CUSTOMER_FLAG AS IS_EDI_CUSTOMER,
    FINAL_DEST_COUNTRY AS FINAL_DESTINATION_DESCRIPTION,
    BILL_SOURCE_CODE AS BILL_COUNTRY_SOURCE_CODE,
    FOB_OPTION_CODE AS FOB_OPTION_CODE,
    PAYMENT_TERM_CODE AS PAYMENT_TERM_CODE,
    RECEIPT_BANK AS FINANCIAL_BANK_ID,
    TRANSIT_TIME_DAYS AS TRANSIT_DAYS_QUANTITY,
    DELIVERY_TYPE_CODE AS DELIVERY_TYPE_CODE,
    DATE_CODE_MAX_AGE_QTY AS DATE_CODE_MAXIMUM_AGE_QUANTITY,
    CUST_PART_NUM_REQUIRED AS IS_CPN_REQUIRED,
    VAT_TAX_CD AS VAT_TAX_CODE,
    MIN_DEL_AMT_VALUE AS MINIMUM_DOLLAR_VALUE_AMOUNT,
    MIN_DOLLAR_VALID_FLAG AS IS_MINIMUM_DOLLAR_VALUE_VALID,
    CHG_ORD_APPRV_REQ AS CHANGE_ORDER_APROVAL_REQUIRED_CODE,
    CREATED_BY AS CREATE_BY_ID,
    CREATION_DATE AS CREATE_DTTM,
    LAST_UPDATE_BY AS LAST_UPDATE_BY_ID,
    LAST_UPDATE_DATE AS LAST_UPDATE_DTTM,
    CREDIT_QUALITY_CODE AS QUALITY_CODE,
    FISCAL_ACCOUNT_NUMBER AS FISCAL_ACCOUNT_NUMBER,
    TRX_CREDIT_LIMIT AS CREDIT_LIMIT_AMOUNT,
    FQA_USER_ID AS FQA_USER_ID,
    CSR_USER_ID AS CSR_USER_ID,
    BUYER_USER_ID,
    ASSEMBLY_LOCATION_FLAG AS IS_ASSEMBLY_LOCATION,
    OPERATING_UNIT AS OPERATING_UNIT,
    CUSTOMER_SHUT_DOWN_FROM AS CUSTOMER_SHUT_DOWN_FROM_DATE,
    CUSTOMER_SHUT_DOWN_TO AS CUSTOMER_SHUT_DOWN_TO_DATE,
    FOB_OPTION_MEANING AS FOB_OPTION_DESCRIPTION,   
    'OM' CUSTOMER_SOURCE,
    NULL AS IS_DELETED, -- Hardcoded as null
    null DIVISION, -- available only for modeln
    TAX_CODE,
    ORDER_TYPE as ORACLE_ORDER_TYPE,
    PAYMENT_TERM_DESC as ORACLE_PAYMENT_TERM,
    SITE_STATUS_CODE as  ORACLE_SITE_STATUS,
    PARTY_SITE_NUMBER as ORACLE_SITE_NUMBER,
    SHIP_METHOD_CODE as ORACLE_SHIP_METHOD,
    FREE_TRADE_ZONE as FREE_TRADE_ZONE,
    COLLECTOR_NAME as COLLECTOR_NAME,
    SHUTDOWN_FLAG as  IS_SHUTDOWN,
    SHIP_TO_COUNTRY
    FROM 
    {{ source('STG_EBS_APPS', 'XXON_OM_CUSTOMER_DETAILS_V') }}   
    WHERE SITE_STATUS_CODE='A'
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY CUST_CODE ORDER BY BIW_UPD_DTTM DESC)=1)
),
STG_XXON_CORP AS (
    SELECT 
    CORP_CODE AS CORPORATION_CODE,
    CORP_DESC AS  CORPORATION_DESCRIPTION,
    NVL(customer_category_code,'CAT4') AS CORPORATION_CATEGORY_CODE,
    CASE WHEN customer_category_code IS NULL THEN 'Foundation' ELSE category_description END  AS CORPORATION_CATEGORY_DESCRIPTION
    FROM 
    {{ source('STG_EBS_APPS', 'XXON_OM_CORP_DETAILS_V') }}   
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY CORP_CODE ORDER BY BIW_UPD_DTTM DESC)=1)
),
STG_XXON_CONTACT AS (
    SELECT 
    USER_ID,
    PERSON_FIRST_NAME,
    PERSON_LAST_NAME,
    EMAIL,
    PHONE_NUMBER,
    LAST_UPDATED_BY,
    CREATED_BY
    FROM 
    {{ source('STG_EBS_APPS', 'XXON_OM_CUSTOMER_CONTACTS_V') }}   
    where lower(status)='active'
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY USER_ID ORDER BY BIW_UPD_DTTM DESC)=1)
),
STG_XXON_CUST_TYPE AS (
    SELECT 
    CUSTOMER_TYPE AS CUSTOMER_TYPE_CD,
    CUSTOMER_TYPE_DESC AS CUSTOMER_TYPE_DESCRIPTION
    FROM 
    {{ source('STG_EBS_APPS', 'XXON_OM_CUSTOMER_TYPE_V') }}   
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY CUSTOMER_TYPE ORDER BY BIW_UPD_DTTM DESC)=1)
) 
,STG_XXON_HANDLING AS (
    SELECT 
    HANDLING_METHOD_CODE,
    HANDLING_METHOD_DESC AS HANDLING_METHOD_CODE_DESCRIPTION
    FROM 
    {{ source('STG_EBS_APPS', 'XXON_OM_HANDLING_METHOD_V') }}   
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY HANDLING_METHOD_CODE ORDER BY BIW_UPD_DTTM DESC)=1)
) 
,STG_MODELN_CUSTOMER AS (
    SELECT
    OID AS CRM_CUSTOMER_OID,
    ACCOUNT_NUM AS ACCOUNT_NUM, -- WE HAVE DUPLICATE ON ACCOUNT NAME
    STATUS AS CRM_STATUS,
    CUSTOM_FIELD37 AS END_USE_CODE,
    CUSTOM_FIELD31 AS END_USE_DESCRIPTION,
    CUSTOM_FIELD39 AS SALES_STRUCTURE,
    CUSTOM_FIELD43,
    CUSTOM_FIELD29 as ERP_STATUS,
    UPPER(coalesce(LEGAL_NAME,DISPLAY_NAME)) as CUSTOMER_NAME,
    CUSTOM_FIELD33 as CUSTOMER_SOURCE,
    CUSTOM_FIELD36 as BUSINESS_CLASS_CODE,
    CUSTOM_FIELD3 as END_CORPORATION_CODE,
    'N' HAS_APPROVAL,
    CREATED_BY as CREATE_BY_ID,
    CREATED_DATE as CREATE_DTTM,
    MODIFIED_BY as LAST_UPDATE_BY_ID,
    MODIFIED_DATE as LAST_UPDATE_DTTM,
    null IS_DELETED,
    CUSTOM_FIELD21 as DIVISION,
    -- Join columns
    PARENT_CUSTOMER_OID,
    SEGMENT_OID,
    CUSTOMER_LEVEL_OID,
    DEFAULT_SHIP_TO_ADDRESS_OID,
    CURRENCY_INFO_OID,
    BIW_INS_DTTM,
    BIW_UPD_DTTM,
    BIW_BATCH_ID
    FROM 
    {{ source('STG_MODELN_PRICING_OWNER', 'CUSTOMER') }}
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY ACCOUNT_NUM ORDER BY MODIFIED_DATE DESC, OID DESC)=1)
)
,STG_MODELN_SEG AS (
    SELECT
    OID AS OID,
    DISPLAY AS MARKET_SEGMENT_CODE
    FROM 
    {{ source('STG_MODELN_PRICING_OWNER', 'SEGMENT') }}
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY DISPLAY ORDER BY BIW_UPD_DTTM DESC)=1)
)
,STG_ORG_CUST_MAP AS(
    select
    customer_oid ,
    org_oid
    from 
    {{ source('STG_MODELN_PRICING_OWNER', 'ORG_CUST_MAPPING') }}   
    -- Is_primary filter picks the recent data.
    where is_primary =1 
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY customer_oid ORDER BY org_oid DESC)=1)
)
,STG_ORG as (
    SELECT
    OID AS OID,
    CODE AS ORG_CODE   
    FROM 
    {{ source('STG_MODELN_PRICING_OWNER', 'ORG') }}   
    WHERE
    lower(STATUS) = 'active' AND 
    IS_ORG_CUST_MAP =1 AND 
    OBSOLETE_FLAG=0
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY NAME ORDER BY BIW_UPD_DTTM DESC)=1)
) 
,STG_MODELN_TERRITORY AS
(
    SELECT
    ORG_CODE AS SALES_ORGANIZATION_CODE,
	REGION_CODE AS SALES_REGION_CODE
    FROM 
   {{ source('STG_MODELN_PRICING_ADMIN', 'SALES_TERRITORY') }}
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY ORG_CODE ORDER BY BIW_UPD_DTTM DESC)=1)
)

,STG_MODELN_CNTRY_MAP AS
(
    SELECT
    COUNTRY_CD,
	COUNTRY,
    CSSOP_REGION_CD,
    ISO_COUNTRY_CD,
    NVL(DECODE(COUNTRY,'Macau', 'CHN',
                        'Taiwan', 'CHN',
                        'China', 'CHN',
                        'Hong Kong', 'CHN', NULL), 
        DECODE(CSSOP_REGION_CD, 'AO', 'SouthEast Asia',
                                'EO', 'Europe',
                                'FO', 'PXSH',
                                'JO', 'Japan',
                                'PXSN'))  AS SALES_ORGANIZATION_CODE
    FROM 
   {{ source('STG_MODELN_PRICING_ADMIN', 'COUNTRY_MAP') }}
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY COUNTRY_CD ORDER BY BIW_UPD_DTTM DESC)=1)
)

,STG_PRO_USER AS(
    SELECT
    OID,
    USERID,
    FIRST_NAME,
    LAST_NAME,
    EMAIL,
    PHONE,
    MODIFIED_BY,
    CREATED_BY
    FROM 
   {{ source('STG_MODELN_PRICING_ADMIN', 'PRO_USER') }}
      --Added filter to fetch only active user id and details
    where lower(STATUS) = 'active'
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY OID ORDER BY BIW_UPD_DTTM DESC)=1)
)
-- We are using LOC_DW_OUT as two alise 
    --1. with udc_spa_cd is not null
    --2. without udc_spa_cd filter
,STG_LOC_DW_OUT AS(
    SELECT
    LOC,
    UDC_FCST_TYPE AS FORECAST_TYPE_CODE,
    UDC_GENERIC_PROG_DESC AS UDC_GENERIC_PROG_DESCRIPTION,
    UPPER(UDC_LOC_STATUS) AS UDC_LOC_STATUS,
    UPPER(SUBSTR(UDC_GENERIC_PROG_DESCRIPTION, 1, POSITION( ' ',UDC_GENERIC_PROG_DESCRIPTION)-1)) AS SERVICE_TYPE_CODE,    
    UDC_SPA_CD
    FROM 
   {{ source('STG_FMS_FMS_OWNER', 'STG_LOC_DW_OUT') }}
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY LOC ORDER BY BIW_UPD_DTTM DESC)=1)
)
-- Need to check with Vandy on join logic
,STG_FMS_SYNCH AS(
    SELECT
    QUEUE_ID
    FROM 
   {{ source('STG_FMS_FMS_OWNER', 'FMS_SYNCH_QUEUE') }}
    WHERE MONITOR_TYPE='FCST_RSVTN_XREF_OUT'
    QUALIFY( ROW_NUMBER() OVER (PARTITION BY QUEUE_ID ORDER BY BIW_UPD_DTTM DESC)=1)
)
-- Need to check with Vandy on join logic
,STG_FCST_RSVTN AS(
    SELECT
    QUEUE_ID,
    RSVTN_CUST_CD,
    CONSUMPTION_CUST_CD
    FROM 
   {{ source('STG_FMS_FMS_OWNER', 'STG_FCST_RSVTN_XREF_OUT') }}
   QUALIFY( ROW_NUMBER() OVER (PARTITION BY CONSUMPTION_CUST_CD ORDER BY BIW_UPD_DTTM DESC)=1)
)

,STG2_FCST_RSVTN AS(
    SELECT
    LOC.LOC,
    LOC.FORECAST_TYPE_CODE,
    LOC.UDC_GENERIC_PROG_DESCRIPTION,
    LOC.UDC_LOC_STATUS   AS UDC_LOC_STATUS,
    LOC.SERVICE_TYPE_CODE,
    RSVTN.RSVTN_CUST_CD AS REPLENISHMENT_CODE    
    FROM 
    STG_LOC_DW_OUT LOC
    INNER JOIN STG_FCST_RSVTN RSVTN
    ON LOC.LOC = RSVTN.CONSUMPTION_CUST_CD
    INNER JOIN STG_FMS_SYNCH SYNCH
    ON SYNCH.QUEUE_ID=RSVTN.QUEUE_ID
    WHERE LOC.udc_spa_cd is not null
),

XXON_OM_CUSTOMER_ADDRESS_V AS (
    SELECT 
        LOCATION AS CUSTOMER_CODE,
        ADDRESS_TYPE,
        ADDRESS1,
        ADDRESS2,
        ADDRESS3,
        ADDRESS4,
        CITY,
        STATE,
        COUNTRY AS COUNTRY_CODE,
        COUNTRY_DESC AS COUNTRY_NAME,
        POSTAL_CODE
    FROM
    {{source('STG_EBS_APPS', 'XXON_OM_CUSTOMER_ADDRESS_V') }} 
     QUALIFY( ROW_NUMBER() OVER (PARTITION BY LOCATION,ADDRESS_TYPE ORDER BY BIW_UPD_DTTM DESC)=1)
)

SELECT 
    STG_CUST.CUSTOMER_CODE,
    STG_CUST.ERP_SITE_USE_ID,
    STG_CUST.ERP_STATUS,
    MDLN_CUST.CRM_CUSTOMER_OID,
    MDLN_CUST.CRM_STATUS,
    STG_CUST.CUSTOMER_NAME,
    STG_CUST.CUSTOMER_TYPE_CODE,
    CUST_TYPE.CUSTOMER_TYPE_DESCRIPTION,
    STG_CUST.CUSTOMER_SOURCE,
    STG_CUST.BUSINESS_CLASS_CODE,   
    STG_CUST.CORPORATION_CODE,
    CORP.CORPORATION_DESCRIPTION,
    STG_CUST.END_CORPORATION_CODE,
    END_CORP.CORPORATION_DESCRIPTION AS END_CORPORATION_DESCRIPTION,
    COALESCE(SALES.SALES_ORGANIZATION_CODE,MDLN_CNTRY_MAP.SALES_ORGANIZATION_CODE) AS SALES_ORGANIZATION_CODE,
    MDLN_CUST.END_USE_CODE,
    MDLN_CUST.END_USE_DESCRIPTION,
    STG_CUST.CURRENCY_CODE,    
    STG_CUST.ISO_CURRENCY_CODE,
    STG_CUST.HAS_CREDIT_HOLD,
    STG_CUST.HAS_SERVICE_HOLD,
    STG_CUST.HAS_APPROVAL::BOOLEAN AS HAS_APPROVAL,
    STG_CUST.ORDER_PROCESSING_REGION_CODE,
    STG_CUST.CRD_SHIP_EARLY_DAYS_QUANTITY,
    STG_CUST.HAS_CRD_PARTIAL,
    STG_CUST.SHIP_VIA_CODE,
    STG_CUST.HAS_SHIP_TO_CRD,
    STG_CUST.SHIP_LATE_DAYS_QUANTITY,
    STG_CUST.BILL_CUSTOMER_CODE,
    STG_CUST.HANDLING_METHOD_CODE,
    HNDLNG.HANDLING_METHOD_CODE_DESCRIPTION,
    STG_CUST.IS_EDI_CUSTOMER,
    STG_CUST.FINAL_DESTINATION_DESCRIPTION,
    STG_CUST.BILL_COUNTRY_SOURCE_CODE,
    STG_CUST.FOB_OPTION_CODE,
    STG_CUST.PAYMENT_TERM_CODE,
    STG_CUST.FINANCIAL_BANK_ID,
    STG_CUST.TRANSIT_DAYS_QUANTITY,
    STG_CUST.DELIVERY_TYPE_CODE,
    STG_CUST.DATE_CODE_MAXIMUM_AGE_QUANTITY,
    STG_CUST.IS_CPN_REQUIRED,
    STG_CUST.VAT_TAX_CODE,
    STG_CUST.MINIMUM_DOLLAR_VALUE_AMOUNT,
    STG_CUST.IS_MINIMUM_DOLLAR_VALUE_VALID,
    STG_CUST.CORPORATION_CATEGORY_CODE,
    STG_CUST.CORPORATION_CATEGORY_DESCRIPTION,
    CASE WHEN STG_CUST.CORPORATION_CODE IN ( 'OOOO', 'SPPP', 'XDDD') OR STG_CUST.CORPORATION_CODE IS NULL 
        THEN STG_CUST.CUSTOMER_NAME
        ELSE CORP.CORPORATION_DESCRIPTION 
    END AS CUSTOMER_ENTITY_CODE,
    FCST_RSVTN.FORECAST_TYPE_CODE,    
    CASE WHEN FCST_RSVTN.SERVICE_TYPE_CODE IS NOT NULL  AND FCST_RSVTN.LOC IS NOT NULL
        THEN 'Y' 
        ELSE 'N'
    END::BOOLEAN AS IS_FORECAST_CUSTOMER, 
    CASE WHEN FCST_RSVTN.UDC_LOC_STATUS IS NULL
        THEN 'Not a Forecast Customer' 
        ELSE FCST_RSVTN.UDC_LOC_STATUS
    END AS  FORECAST_CUSTOMER_STATUS_CODE,
    FCST_RSVTN.REPLENISHMENT_CODE,
    FCST_RSVTN.SERVICE_TYPE_CODE,
    STG_CUST.CHANGE_ORDER_APROVAL_REQUIRED_CODE,
    LOC_DW_OUT.UDC_GENERIC_PROG_DESCRIPTION ,
    STG_CUST.CREATE_BY_ID,
    STG_CUST.CREATE_DTTM,
    STG_CUST.LAST_UPDATE_BY_ID,
    STG_CUST.LAST_UPDATE_DTTM,
    STG_CUST.IS_DELETED,
    STG_CUST.QUALITY_CODE,
    STG_CUST.FISCAL_ACCOUNT_NUMBER,
    STG_CUST.CREDIT_LIMIT_AMOUNT,
    STG_CUST.DIVISION,
    MDLN_CUST.SALES_STRUCTURE,
    MDLN_SEG.MARKET_SEGMENT_CODE, 
    STG_CUST.IS_ASSEMBLY_LOCATION,
    STG_CUST.OPERATING_UNIT,
    SUBSTRING(STG_CUST.CORPORATION_CODE,1,3)||DECODE(SALES.SALES_REGION_CODE,'AMR','N','GCHN','A',SUBSTRING(SALES.SALES_REGION_CODE,1,1)) AS COF_CODE,
    STG_CUST.CORPORATION_CODE AS COG_CODE,
    STG_CUST.CUSTOMER_SHUT_DOWN_FROM_DATE,
    STG_CUST.CUSTOMER_SHUT_DOWN_TO_DATE,
    STG_CUST.FOB_OPTION_DESCRIPTION,
    STG_CUST.TAX_CODE,
    STG_CUST.ORACLE_ORDER_TYPE,
    STG_CUST.ORACLE_PAYMENT_TERM,
    STG_CUST.ORACLE_SITE_STATUS,
    STG_CUST.ORACLE_SITE_NUMBER,
    STG_CUST.ORACLE_SHIP_METHOD,
    STG_CUST.FREE_TRADE_ZONE,
    STG_CUST.COLLECTOR_NAME,
    STG_CUST.IS_SHUTDOWN,
        -- ROLE FQA
    CSR_CNTCT.USER_ID as CSR_USER_ID,
    CSR_CNTCT.PERSON_FIRST_NAME as CSR_FIRST_NAME,
    CSR_CNTCT.PERSON_LAST_NAME as CSR_LAST_NAME,
    CSR_CNTCT.EMAIL as CSR_EMAIL,
    CSR_CNTCT.PHONE_NUMBER as CSR_PHONE,
    CSR_CNTCT.LAST_UPDATED_BY as CSR_CONTACT_LAST_UPDATE_BY,
    CSR_CNTCT.CREATED_BY as CSR_CONTACT_CREATED_BY,
    -- ROLE FQA
    FQA_CNTCT.USER_ID as FQA_USER_ID,
    FQA_CNTCT.PERSON_FIRST_NAME as FQA_FIRST_NAME,
    FQA_CNTCT.PERSON_LAST_NAME as FQA_LAST_NAME,
    FQA_CNTCT.EMAIL as FQA_EMAIL,
    FQA_CNTCT.PHONE_NUMBER as FQA_PHONE,
    FQA_CNTCT.LAST_UPDATED_BY as FQA_CONTACT_LAST_UPDATE_BY,
    FQA_CNTCT.CREATED_BY as FQA_CONTACT_CREATED_BY,
    -- ROLE BUYER
    BUYER_CNTCT.USER_ID as BUYER_USER_ID,
    BUYER_CNTCT.PERSON_FIRST_NAME as BUYER_FIRST_NAME,
    BUYER_CNTCT.PERSON_LAST_NAME as BUYER_LAST_NAME,
    BUYER_CNTCT.EMAIL as BUYER_EMAIL,
    BUYER_CNTCT.PHONE_NUMBER as BUYER_PHONE,
    BUYER_CNTCT.LAST_UPDATED_BY as BUYER_CONTACT_LAST_UPDATE_BY,
    BUYER_CNTCT.CREATED_BY as BUYER_CONTACT_CREATED_BY,
    -- ROLE FSE
    FSE_CNTCT.USERID AS FSE_USER_ID,
    FSE_CNTCT.FIRST_NAME AS FSE_FIRST_NAME,
    FSE_CNTCT.LAST_NAME AS FSE_LAST_NAME,
    FSE_CNTCT.EMAIL AS FSE_EMAIL,
    FSE_CNTCT.PHONE AS FSE_PHONE,
    FSE_CNTCT.MODIFIED_BY AS FSE_CONTACT_LAST_UPDATE_BY,
    FSE_CNTCT.CREATED_BY AS FSE_CONTACT_CREATED_BY,
    SHIP.ADDRESS1 AS SHIP_ADDRESS_LINE1,
    SHIP.ADDRESS2 AS SHIP_ADDRESS_LINE2,
    SHIP.ADDRESS3 AS SHIP_ADDRESS_LINE3,
    SHIP.ADDRESS4 AS SHIP_ADDRESS_LINE4,
    SHIP.POSTAL_CODE AS SHIP_ADDRESS_POSTAL_CODE,
    SHIP.COUNTRY_CODE AS SHIP_ADDRESS_COUNTRY_CODE,
    SHIP.COUNTRY_NAME AS SHIP_ADDRESS_COUNTRY_NAME,
    SHIP.STATE AS SHIP_ADDRESS_STATE,
    SHIP.CITY AS SHIP_ADDRESS_CITY,
    BILL.ADDRESS1 AS BILL_ADDRESS_LINE1,
    BILL.ADDRESS2 AS BILL_ADDRESS_LINE2,
    BILL.ADDRESS3 AS BILL_ADDRESS_LINE3,
    BILL.ADDRESS4 AS BILL_ADDRESS_LINE4,
    BILL.POSTAL_CODE AS BILL_ADDRESS_POSTAL_CODE,
    BILL.COUNTRY_CODE AS BILL_ADDRESS_COUNTRY_CODE,
    BILL.COUNTRY_NAME AS BILL_ADDRESS_COUNTRY_NAME,
    BILL.STATE AS BILL_ADDRESS_STATE,
    BILL.CITY AS BILL_ADDRESS_CITY,
    '{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_INS_DTTM ,
    '{{V_START_DTTM}}'::TIMESTAMP_NTZ BIW_UPD_DTTM ,
    {{V_BIW_BATCH_ID}}	 as BIW_BATCH_ID

FROM STG_XXON_CUST STG_CUST
LEFT JOIN STG_MODELN_CUSTOMER MDLN_CUST
ON  STG_CUST.CUSTOMER_CODE = MDLN_CUST.ACCOUNT_NUM
LEFT JOIN STG_XXON_CUST_TYPE  CUST_TYPE
ON STG_CUST.CUSTOMER_TYPE_CODE = CUST_TYPE.CUSTOMER_TYPE_CD
LEFT JOIN STG_XXON_CORP CORP 
ON STG_CUST.CORPORATION_CODE =CORP.CORPORATION_CODE
LEFT JOIN STG_XXON_CORP END_CORP 
ON STG_CUST.END_CORPORATION_CODE =END_CORP.CORPORATION_CODE
LEFT JOIN STG_MODELN_CNTRY_MAP MDLN_CNTRY_MAP
ON STG_CUST.SHIP_TO_COUNTRY = MDLN_CNTRY_MAP.COUNTRY_CD
    -- BRIDGE BETWEEN CUSTOMER AND ORG
LEFT JOIN STG_ORG_CUST_MAP ORG_CUST_MAP
ON MDLN_CUST.CRM_CUSTOMER_OID = ORG_CUST_MAP.CUSTOMER_OID
LEFT JOIN STG_ORG ORG
ON ORG_CUST_MAP.ORG_OID = ORG.OID
-- GET REGION CODE
LEFT JOIN STG_MODELN_TERRITORY SALES
ON ORG.ORG_CODE = SALES.SALES_ORGANIZATION_CODE
LEFT JOIN STG_XXON_HANDLING HNDLNG 
ON STG_CUST.HANDLING_METHOD_CODE= HNDLNG.HANDLING_METHOD_CODE
-- GET FORCAST, SERVICE DETAILS, REPLENISHMENT_CODE
LEFT JOIN STG2_FCST_RSVTN FCST_RSVTN
ON STG_CUST.CUSTOMER_CODE = FCST_RSVTN.LOC
-- GET UDC_GENERIC_PROG_DESC
LEFT JOIN STG_LOC_DW_OUT LOC_DW_OUT 
ON STG_CUST.CUSTOMER_CODE = LOC_DW_OUT.LOC
-- GET MARKET SEGMENT
LEFT JOIN STG_MODELN_SEG MDLN_SEG
ON  MDLN_CUST.SEGMENT_OID = MDLN_SEG.OID
-- GET CONTACT INFO
-- CSR Role
LEFT JOIN STG_XXON_CONTACT CSR_CNTCT 
ON STG_CUST.CSR_USER_ID = CSR_CNTCT.USER_ID 
--FQA
LEFT JOIN STG_XXON_CONTACT FQA_CNTCT 
ON STG_CUST.FQA_USER_ID = FQA_CNTCT.USER_ID 
--Buyer
LEFT JOIN STG_XXON_CONTACT BUYER_CNTCT 
ON STG_CUST.BUYER_USER_ID = BUYER_CNTCT.USER_ID 
-- FSE
LEFT JOIN STG_PRO_USER  FSE_CNTCT
ON MDLN_CUST.CUSTOM_FIELD43 = FSE_CNTCT.OID
AND MDLN_CUST.CUSTOM_FIELD43 IS NOT NULL
AND MDLN_CUST.CUSTOMER_LEVEL_OID=3
LEFT JOIN XXON_OM_CUSTOMER_ADDRESS_V SHIP 
ON STG_CUST.CUSTOMER_CODE =SHIP.CUSTOMER_CODE
AND SHIP.ADDRESS_TYPE = 'SHIP'
LEFT JOIN XXON_OM_CUSTOMER_ADDRESS_V BILL 
ON STG_CUST.CUSTOMER_CODE =BILL.CUSTOMER_CODE
AND BILL.ADDRESS_TYPE = 'BILL'